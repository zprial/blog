{"version":3,"sources":["webpack:///./src/components/banner.tsx","webpack:///./src/components/main.tsx","webpack:///./src/static/banner_home.jpg","webpack:///./node_modules/classnames/index.js","webpack:///./src/templates/blog-post.js"],"names":["Banner","render","this","props","banner","children","className","filter","filterClass","id","cx","style","backgroundImage","React","defaultProps","require","module","exports","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","data","pathContext","post","markdownRemark","previous","next","frontmatter","title","cover","tags","date","author","map","c","to","backgroundColor","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":";uKAWqBA,E,kGAKnBC,OAAA,WAAS,MACsDC,KAAKC,MAA1DC,EADD,EACCA,OAAQC,EADT,EACSA,SAAUC,EADnB,EACmBA,UAAWC,EAD9B,EAC8BA,OAAQC,EADtC,EACsCA,YAC7C,OACE,uBAAKC,GAAG,iBACLF,GAAU,uBAAKD,UAAWI,EAAG,gBAAiBF,KAC/C,uBAAKF,UAAU,eAAeK,MAAO,CAAEC,gBAAiB,OAAOR,EAAT,OACtD,uBAAKE,UAAWI,EAAG,aAAcJ,IAAaD,K,GAXlBQ,aAAfb,EACZc,aAAe,CACpBV,OAAQW,EAAQ,U,oCCbpB,gBAEe,oBAAGV,EAAH,EAAGA,SAAUM,EAAb,EAAaA,MAAOL,EAApB,EAAoBA,UAApB,OACb,wBAAMG,GAAG,cAAcE,MAAOA,EAAOL,UAAWA,GAC9C,uBAAKA,UAAU,aAAaD,M,qBCJhCW,EAAOC,QAAU,IAA0B,2D,qBCA3C,OAOA,WACE,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BL,EAAQM,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IAAQA,EAAID,OAAQ,CAC3C,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAE/BK,GACFT,EAAQM,KAAKG,QAEV,GAAgB,WAAZJ,EACT,IAAK,IAAIM,KAAOP,EACVP,EAAOe,KAAKR,EAAKO,IAAQP,EAAIO,IAC/BX,EAAQM,KAAKK,IAMrB,OAAOX,EAAQa,KAAK,KAGelB,EAAOC,SAC1CG,EAAWe,QAAUf,EACrBJ,EAAOC,QAAUG,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aAxCL,I,2DCPA,wHAUe,sBAA4B,IAAzBgB,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAChBC,EAAOF,EAAKG,eADsB,GAEbF,EAAnBG,SAAmBH,EAATI,KAE2BH,EAAKI,aAA1CC,EAJgC,EAIhCA,MAAOC,EAJyB,EAIzBA,MAAOC,EAJkB,EAIlBA,KAAMC,EAJY,EAIZA,KAAMC,EAJM,EAINA,OAElC,OACE,6BACE,kBAAC,IAAD,CAAQ3C,OAAQwC,EAAOrC,QAAM,GAC3B,yBAAKD,UAAU,yBACb,4BAAKqC,GACL,yBAAKrC,UAAU,aACb,yBAAKA,UAAU,QACb,uBAAGA,UAAU,yBACZyC,GAAU,UAEb,yBAAKzC,UAAU,QACb,uBAAGA,UAAU,uBACZwC,IAGL,wBAAIxC,UAAU,aACXuC,EAAKG,KAAI,SAACC,GAAD,OACR,wBAAIjB,IAAKiB,GACP,kBAAC,IAAD,CAAMC,GAAE,SAAWD,GAAMA,UAMnC,kBAAC,IAAD,CAAMtC,MAAO,CAAEwC,gBAAiB,SAC9B,yBACE7C,UAAU,gBACV8C,wBAAyB,CAAEC,OAAQf,EAAKgB,WAU3C,IAAMC,EAAS","file":"component---src-templates-blog-post-js-615280d9843054efe198.js","sourcesContent":["import * as React from \"react\";\nimport * as cx from \"classnames\";\n\ninterface PageProps {\n  banner?: string; // 图片背景\n  filter?: boolean;\n  filterClass?: string;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport default class Banner extends React.Component<PageProps, any> {\n  static defaultProps = {\n    banner: require(\"../static/banner_home.jpg\")\n  };\n\n  render() {\n    const { banner, children, className, filter, filterClass } = this.props;\n    return (\n      <div id=\"layout_banner\">\n        {filter && <div className={cx(\"banner-filter\", filterClass)}></div>}\n        <div className=\"banner-image\" style={{ backgroundImage: `url(${banner})` }}></div>\n        <div className={cx(\"banner-ctx\", className)}>{children}</div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\n\nexport default ({ children, style, className }: { children: React.ReactNode, style?: React.CSSProperties, className?: string }) => (\n  <main id=\"layout_main\" style={style} className={className}>\n    <div className=\"container\">{children}</div>\n  </main>\n);\n","module.exports = __webpack_public_path__ + \"static/banner_home-ceb272dada86851838d4c21a7c0ebc61.jpg\";","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","/**\n * 博客文章模板\n */\nimport React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Main from '../components/main';\nimport Banner from '../components/banner';\n\nimport \"../styles/index.scss\";\n\nexport default ({ data, pathContext }) => {\n  const post = data.markdownRemark;\n  const { previous, next } = pathContext;\n\n  const { title, cover, tags, date, author } = post.frontmatter;\n\n  return (\n    <div>\n      <Banner banner={cover} filter>\n        <div className=\"banner-post container\">\n          <h1>{title}</h1>\n          <div className=\"post-meta\">\n            <div className=\"item\">\n              <i className=\"iconfont icon-person\"></i>\n              {author || 'Zprial'}\n            </div>\n            <div className=\"item\">\n              <i className=\"iconfont icon-date\"></i>\n              {date}\n            </div>\n          </div>\n          <ul className=\"post-tags\">\n            {tags.map((c) => (\n              <li key={c}>\n                <Link to={`/tags/${c}`}>{c}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </Banner>\n      <Main style={{ backgroundColor: '#fff' }}>\n        <div\n          className=\"markdown-body\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        ></div>\n        {/* {previous && <li>\n                <Link to={previous.fields.slug} rel=\"prev\"> {previous.frontmatter.title}</Link>\n            </li>} */}\n      </Main>\n    </div>\n  );\n};\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        cover\n        tags\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}